<Window x:Class="SmartMonitorApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:constantChanges="clr-namespace:Wpf.CartesianChart.ConstantChanges;assembly=ConstantChangesChart"
        xmlns:gauges="clr-namespace:Wpf.Gauges"
        xmlns:local="clr-namespace:SmartMonitorApp"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:constantChanges1="clr-namespace:Wpf.CartesianChart.ConstantChanges"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     Background="{DynamicResource MaterialDesignPaper}"
     FontFamily="{DynamicResource MaterialDesignFont}"
        Title="MainWindow" Height="800" Width="1280" WindowStartupLocation="CenterScreen">
    <Grid x:Name="gridParent" Margin="10,10">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="1" Margin="10" VerticalAlignment="Bottom">
            <Button Name="btnInfo"
              Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
              HorizontalAlignment="Left"
              ToolTip="MaterialDesignFloatingActionMiniButton" Click="btnInfo_Click">
                            <materialDesign:PackIcon
                Kind="Information"
                Height="24"
                Width="24"/>
            </Button>
        </StackPanel>

        <StackPanel Grid.Column="1" Grid.Row="0" Margin="10">
            <!-- <Calendar VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="16"/> -->
            <Label HorizontalAlignment="Center">Humidity (%)</Label>
            <!--this gauge is rotated 90° and has an inverted clockwise fill-->
            <lvc:Gauge  x:Name="guageHumidity" Margin="5" MinHeight="100" MinWidth="150"
                    Uses360Mode="False"
                    From="0" To="100" Value="0" >
                <lvc:Gauge.GaugeRenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="0"></RotateTransform>
                        <ScaleTransform ScaleX="1"></ScaleTransform>
                    </TransformGroup>
                </lvc:Gauge.GaugeRenderTransform>
            </lvc:Gauge>

            <Label HorizontalAlignment="Center">Temperature (degC)</Label>
            <!--this gauge is rotated 90° and has an inverted clockwise fill-->
            <lvc:Gauge  x:Name="guageTemperature" MinHeight="100" MinWidth="150"
                    From="-20" To="60" Value="0" >
                <lvc:Gauge.GaugeRenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="0"></RotateTransform>
                        <ScaleTransform ScaleX="1"></ScaleTransform>
                    </TransformGroup>
                </lvc:Gauge.GaugeRenderTransform>
            </lvc:Gauge>

            <Label HorizontalAlignment="Center">Pressure (kPa)</Label>
                <!--this gauge is rotated 90° and has an inverted clockwise fill-->
            <lvc:Gauge  x:Name="guagePressure" Margin="5" MinHeight="100" MinWidth="150"
                       Uses360Mode="False"
                       From="0" To="250" Value="0" >
                <lvc:Gauge.GaugeRenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="0"></RotateTransform>
                        <ScaleTransform ScaleX="1"></ScaleTransform>
                    </TransformGroup>
                </lvc:Gauge.GaugeRenderTransform>
            </lvc:Gauge>

<!--
            <materialDesign:Card Padding="32" Margin="16">
                <TextBlock Grid.Row="0" Grid.Column ="1"  x:Name="txtClock" TextWrapping="Wrap" Text="00:00" VerticalAlignment="Top" FontSize="54" TextAlignment="Center" Height="Auto" Width="Auto" HorizontalAlignment="Center"/>
            </materialDesign:Card>
-->
        </StackPanel>

        <StackPanel Grid.Column="1" Grid.Row="1" Margin="10">
            <Label HorizontalAlignment="Center">Current (A)</Label>
            <!--this gauge is rotated 90° and has an inverted clockwise fill-->
            <lvc:Gauge  x:Name="guageCurrent" Margin="5" MinHeight="100" MinWidth="150"
                       Uses360Mode="False"
                       From="0" To="13" Value="0" >
                <lvc:Gauge.GaugeRenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="0"></RotateTransform>
                        <ScaleTransform ScaleX="1"></ScaleTransform>
                    </TransformGroup>
                </lvc:Gauge.GaugeRenderTransform>
            </lvc:Gauge>
            <Label HorizontalAlignment="Center">Power (kW)</Label>
            <!--this gauge is rotated 90° and has an inverted clockwise fill-->
            <lvc:Gauge  x:Name="guagePower" MinHeight="100" MinWidth="150"
                       From="0" To="3" Value="0" >
                <lvc:Gauge.GaugeRenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="0"></RotateTransform>
                        <ScaleTransform ScaleX="1"></ScaleTransform>
                    </TransformGroup>
                </lvc:Gauge.GaugeRenderTransform>
            </lvc:Gauge>
        </StackPanel>

        <constantChanges1:ConstantChangesChart x:Name="graphRHT" Grid.Column="2" Grid.Row="0" MinHeight="350"></constantChanges1:ConstantChangesChart>
        <constantChanges1:ConstantChangesChart x:Name="graphEnergy" Grid.Column="2" Grid.Row="1" MinHeight="350"></constantChanges1:ConstantChangesChart>

        
        <!--
            <lvc:CartesianChart x:Name="graphTemperature" Grid.Row="3" Grid.Column="0" Series="{Binding SeriesCollection}" LegendLocation="Right" >
            <lvc:CartesianChart.AxisY>
                <lvc:Axis Title="Temp" LabelFormatter="{Binding YFormatter}"></lvc:Axis>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Title="Seconds" Labels="{Binding Labels}"></lvc:Axis>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>
            -->
        </Grid>

</Window>
